<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DSL on tech-lessons.in</title><link>/en/tags/dsl/</link><description>Recent content in DSL on tech-lessons.in</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 27 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/dsl/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin DSL</title><link>/en/blog/kotlin_dsl/</link><pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate><guid>/en/blog/kotlin_dsl/</guid><description>&lt;blockquote>
&lt;blockquote>
&lt;p>A domain-specific language (DSL) is a computer language specialized to a particular application domain. This is in contrast to a general-purpose language (GPL), which is broadly applicable across domains. There are a wide variety of DSLs, ranging from widely used languages for common domains, such as HTML for web pages, down to languages used by only one or a few pieces of software.&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;h3 id="kotlin-dsl">Kotlin DSL&lt;/h3>
&lt;p>Kotlin provides first class support for DSL which allows us to express domain-specific operations much more concisely than an equivalent piece of code in a general-purpose language.
Let&amp;rsquo;s try and build a simple DSL in Kotlin -&lt;/p></description></item></channel></rss>