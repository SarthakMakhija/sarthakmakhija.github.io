<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bloom Filter on tech-lessons.in</title><link>/en/tags/bloom-filter/</link><description>Recent content in Bloom Filter on tech-lessons.in</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 25 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/bloom-filter/index.xml" rel="self" type="application/rss+xml"/><item><title>Bloom filter</title><link>/en/blog/bloom_filter/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>/en/blog/bloom_filter/</guid><description>&lt;p>A Bloom filter is a probabilistic data structure&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> used to test whether an element is a set member. A bloom filter can query against large amounts of data and return either &amp;ldquo;possibly in the set&amp;rdquo; or &amp;ldquo;definitely not in the set&amp;rdquo;.&lt;/p>
&lt;p>A bloom filter can have false positives, but false negatives are impossible.&lt;/p>
&lt;p>Elements can only be added to the set, &lt;em>but not removed&lt;/em> (though this can be addressed with the counting bloom filter variant).&lt;/p></description></item></channel></rss>