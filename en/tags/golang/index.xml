<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on tech-lessons.in</title><link>/en/tags/golang/</link><description>Recent content in Golang on tech-lessons.in</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 22 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>A guide to Serializable Snapshot Isolation in Key/Value storage engine</title><link>/en/blog/serializable_snapshot_isolation/</link><pubDate>Fri, 22 Mar 2024 00:00:00 +0000</pubDate><guid>/en/blog/serializable_snapshot_isolation/</guid><description>Ensuring data consistency in the face of concurrent transactions is a critical challenge in database management. Traditional serializable isolation, while guaranteeing data integrity, often suffers from performance bottlenecks due to extensive locking. This article explores Serializable Snapshot Isolation (SSI) that promises the best of both worlds: strong data consistency without sacrificing performance. The article delves into the inner workings of SSI and explore its implementation for a Key/Value storage engine. I will refer to the research paper titled A critique of snapshot isolation .</description></item><item><title>Invoking C Code from Golang</title><link>/en/blog/invoking_c_from_go/</link><pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate><guid>/en/blog/invoking_c_from_go/</guid><description>The article attempts to explore Golang&amp;rsquo;s &amp;ldquo;C&amp;rdquo; package which allows invoking C code from Golang. Before we get into the idea of invoking C code from Golang, let&amp;rsquo;s see a use-case where this might be needed.
Interfacing with an existing C library Let&amp;rsquo;s consider that we wish to develop a storage engine for pmem (persistent memory) in Golang. In order to develop this, we might want to use pmdk - persistent memory development kit which is written in C.</description></item></channel></rss>