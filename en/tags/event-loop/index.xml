<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Event Loop on tech-lessons.in</title><link>/en/tags/event-loop/</link><description>Recent content in Event Loop on tech-lessons.in</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 22 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/event-loop/index.xml" rel="self" type="application/rss+xml"/><item><title>Many flavors of Networking IO</title><link>/en/blog/many_flavors_of_networking_io/</link><pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate><guid>/en/blog/many_flavors_of_networking_io/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>The foundation of any networked application hinges on its ability to efficiently handle data exchange.
But beneath the surface, there&amp;rsquo;s a hidden world of techniques for managing this communication.
This article dives into various &amp;ldquo;flavors&amp;rdquo; of networking IO, exploring the trade-offs associated with each approach.&lt;/p>
&lt;p>To illustrate various ways applications handle network traffic, we&amp;rsquo;ll build a TCP server using four distinct approaches:
&lt;strong>blocking I/O with a single thread&lt;/strong>, &lt;strong>blocking I/O with multiple threads&lt;/strong>, &lt;strong>non-blocking I/O with busy waiting&lt;/strong>, and
&lt;strong>a single-threaded event loop&lt;/strong>.&lt;/p></description></item></channel></rss>