<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Count-Min Sketch on tech-lessons.in</title><link>/en/tags/count-min-sketch/</link><description>Recent content in Count-Min Sketch on tech-lessons.in</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 24 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/count-min-sketch/index.xml" rel="self" type="application/rss+xml"/><item><title>Count-min sketch</title><link>/en/blog/count_min_sketch/</link><pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate><guid>/en/blog/count_min_sketch/</guid><description>&lt;p>Count-min sketch (CM sketch) is a probabilistic data structure&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> used to estimate the frequency of events in a data stream.&lt;/p>
&lt;p>It relies on hash functions to map events to frequencies, but unlike a hash table, it uses only sublinear space at the expense of over-counting some events due to hash collisions. The countâ€“min sketch was invented in 2003 by Graham Cormode and S. Muthu Muthukrishnan.&lt;/p>
&lt;h3 id="understanding-count-min-sketch">Understanding Count-min Sketch&lt;/h3>
&lt;p>Let&amp;rsquo;s say we want to build a solution to count the frequency of elements in a data stream. One idea would be to use a &lt;code>hashmap&lt;/code> with the data element as the key and count as the value. The approach works but does not scale with a data stream comprising billions of elements, the most unique.&lt;/p></description></item></channel></rss>