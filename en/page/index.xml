<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pages on tech-lessons.in</title><link>/en/page/</link><description>Recent content in Pages on tech-lessons.in</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 20 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="/en/page/index.xml" rel="self" type="application/rss+xml"/><item><title>My projects</title><link>/en/page/projects/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>/en/page/projects/</guid><description>My Projects I love working on my projects in my free time.
ðŸ”¹ Clearcheck Write expressive and elegant assertions with ease!
clearcheck is designed to make assertion statements in Rust as clear and concise as possible.
It allows chaining multiple assertions together for a fluent and intuitive syntax, leading to more self-documenting test cases.
let pass_phrase = &amp;#34;P@@sw0rd1 zebra alpha&amp;#34;; pass_phrase.should_not_be_empty() .should_have_at_least_length(10) .should_contain_all_characters(vec![&amp;#39;@&amp;#39;, &amp;#39; &amp;#39;]) .should_contain_a_digit() .should_not_contain_ignoring_case(&amp;#34;pass&amp;#34;) .should_not_contain_ignoring_case(&amp;#34;word&amp;#34;); ðŸ”¹ Blast blast is a load generator for TCP servers, especially if such servers maintain persistent connections.</description></item><item><title>About Me</title><link>/en/page/about/</link><pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate><guid>/en/page/about/</guid><description> I am Sarthak Makhija, and I am an application developer at ThoughtWorks. I had worked with Citigroup and TCS before I joined ThoughtWorks.
I am currently leading a team that is developing a strongly consistent distributed key/value storage engine with support for rich queries.
The technical ideas of our distributed key/value storage engine include:
golang as the programming language etcd as the metadata store badger as the key/value storage engine raft (/multi-raft) as the consensus algorithm and two-phase commit with serial isolation level Let&amp;rsquo;s connect</description></item></channel></rss>